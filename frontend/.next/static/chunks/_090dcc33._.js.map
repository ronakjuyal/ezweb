{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ronak/OneDrive/Documents/ezweb/frontend/lib/config.ts"],"sourcesContent":["export const config = {\n  apiUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080/api',\n  mainDomain: process.env.NEXT_PUBLIC_MAIN_DOMAIN || 'localhost:3000',\n  s3BucketUrl: process.env.NEXT_PUBLIC_S3_BUCKET_URL || '',\n};\n"],"names":[],"mappings":";;;;AACU;AADH,MAAM,SAAS;IACpB,QAAQ,iEAAmC;IAC3C,YAAY,sDAAuC;IACnD,aAAa,sFAAyC;AACxD","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ronak/OneDrive/Documents/ezweb/frontend/lib/api-client.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { config } from './config';\nimport type {\n  AuthResponse,\n  LoginRequest,\n  RegisterRequest,\n  Website,\n  WebsiteRequest,\n  ComponentRegistry,\n  WebsiteComponent,\n  WebsiteComponentRequest,\n  Product,\n  ProductRequest,\n  Media,\n  ApiResponse,\n} from '@/types';\n\nclass ApiClient {\n  private api: AxiosInstance;\n\n  constructor() {\n    this.api = axios.create({\n      baseURL: config.apiUrl,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.api.interceptors.request.use(\n      (config) => {\n        const token = this.getToken();\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Response interceptor to handle token refresh\n    this.api.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n\n          try {\n            const refreshToken = this.getRefreshToken();\n            if (refreshToken) {\n              const { data } = await axios.post<AuthResponse>(\n                `${config.apiUrl}/auth/refresh`,\n                null,\n                { params: { refreshToken } }\n              );\n\n              this.setToken(data.accessToken);\n              this.setRefreshToken(data.refreshToken);\n\n              originalRequest.headers.Authorization = `Bearer ${data.accessToken}`;\n              return this.api(originalRequest);\n            }\n          } catch (refreshError) {\n            this.clearAuth();\n            if (typeof window !== 'undefined') {\n              window.location.href = '/login';\n            }\n            return Promise.reject(refreshError);\n          }\n        }\n\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  // Auth methods\n  private setToken(token: string) {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('accessToken', token);\n    }\n  }\n\n  private getToken(): string | null {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('accessToken');\n    }\n    return null;\n  }\n\n  private setRefreshToken(token: string) {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('refreshToken', token);\n    }\n  }\n\n  private getRefreshToken(): string | null {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('refreshToken');\n    }\n    return null;\n  }\n\n  private clearAuth() {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n    }\n  }\n\n  // Authentication APIs\n  async register(data: RegisterRequest): Promise<AuthResponse> {\n    const response = await this.api.post<AuthResponse>('/auth/register', data);\n    this.setToken(response.data.accessToken);\n    this.setRefreshToken(response.data.refreshToken);\n    return response.data;\n  }\n\n  async login(username: string, password: string): Promise<AuthResponse> {\n    const response = await this.api.post<AuthResponse>('/auth/login', { username, password });\n    this.setToken(response.data.accessToken);\n    this.setRefreshToken(response.data.refreshToken);\n    return response.data;\n  }\n\n  logout() {\n    this.clearAuth();\n  }\n\n  // Website APIs\n  async getWebsites(): Promise<Website[]> {\n    const response = await this.api.get<Website[]>('/websites');\n    return response.data;\n  }\n\n  async getWebsiteById(id: number): Promise<Website> {\n    const response = await this.api.get<Website>(`/websites/${id}`);\n    return response.data;\n  }\n\n  async getWebsiteBySubdomain(subdomain: string): Promise<Website> {\n    const response = await this.api.get<Website>(`/websites/subdomain/${subdomain}`);\n    return response.data;\n  }\n\n  async createWebsite(data: WebsiteRequest): Promise<Website> {\n    const response = await this.api.post<Website>('/websites', data);\n    return response.data;\n  }\n\n  async updateWebsite(id: number, data: WebsiteRequest): Promise<Website> {\n    const response = await this.api.put<Website>(`/websites/${id}`, data);\n    return response.data;\n  }\n\n  async deleteWebsite(id: number): Promise<ApiResponse> {\n    const response = await this.api.delete<ApiResponse>(`/websites/${id}`);\n    return response.data;\n  }\n\n  // Component Registry APIs\n  async getActiveComponents(): Promise<ComponentRegistry[]> {\n    const response = await this.api.get<ComponentRegistry[]>('/components');\n    return response.data;\n  }\n\n  async getComponentById(id: number): Promise<ComponentRegistry> {\n    const response = await this.api.get<ComponentRegistry>(`/components/${id}`);\n    return response.data;\n  }\n\n  async getComponentsByCategory(category: string): Promise<ComponentRegistry[]> {\n    const response = await this.api.get<ComponentRegistry[]>(`/components/category/${category}`);\n    return response.data;\n  }\n\n  // Admin - Component Registry APIs\n  async createComponent(data: any): Promise<ComponentRegistry> {\n    const response = await this.api.post<ComponentRegistry>('/admin/components', data);\n    return response.data;\n  }\n\n  async getAllComponents(): Promise<ComponentRegistry[]> {\n    const response = await this.api.get<ComponentRegistry[]>('/admin/components');\n    return response.data;\n  }\n\n  async updateComponent(id: number, data: any): Promise<ComponentRegistry> {\n    const response = await this.api.put<ComponentRegistry>(`/admin/components/${id}`, data);\n    return response.data;\n  }\n\n  async deleteComponent(id: number): Promise<ApiResponse> {\n    const response = await this.api.delete<ApiResponse>(`/admin/components/${id}`);\n    return response.data;\n  }\n\n  // Website Component APIs\n  async getWebsiteComponents(websiteId: number): Promise<WebsiteComponent[]> {\n    const response = await this.api.get<WebsiteComponent[]>(`/websites/${websiteId}/components`);\n    return response.data;\n  }\n\n  async getVisibleComponents(websiteId: number): Promise<WebsiteComponent[]> {\n    const response = await this.api.get<WebsiteComponent[]>(`/websites/${websiteId}/components/visible`);\n    return response.data;\n  }\n\n  async addComponentToWebsite(websiteId: number, data: WebsiteComponentRequest): Promise<WebsiteComponent> {\n    const response = await this.api.post<WebsiteComponent>(`/websites/${websiteId}/components`, data);\n    return response.data;\n  }\n\n  async updateWebsiteComponent(websiteId: number, id: number, data: WebsiteComponentRequest): Promise<WebsiteComponent> {\n    const response = await this.api.put<WebsiteComponent>(`/websites/${websiteId}/components/${id}`, data);\n    return response.data;\n  }\n\n  async deleteWebsiteComponent(websiteId: number, id: number): Promise<ApiResponse> {\n    const response = await this.api.delete<ApiResponse>(`/websites/${websiteId}/components/${id}`);\n    return response.data;\n  }\n\n  async reorderComponents(websiteId: number, componentIds: number[]): Promise<ApiResponse> {\n    const response = await this.api.put<ApiResponse>(`/websites/${websiteId}/components/reorder`, componentIds);\n    return response.data;\n  }\n\n  // Product APIs\n  async getWebsiteProducts(websiteId: number): Promise<Product[]> {\n    const response = await this.api.get<Product[]>(`/websites/${websiteId}/products`);\n    return response.data;\n  }\n\n  async getAvailableProducts(websiteId: number): Promise<Product[]> {\n    const response = await this.api.get<Product[]>(`/websites/${websiteId}/products/available`);\n    return response.data;\n  }\n\n  async createProduct(websiteId: number, data: ProductRequest): Promise<Product> {\n    const response = await this.api.post<Product>(`/websites/${websiteId}/products`, data);\n    return response.data;\n  }\n\n  async updateProduct(websiteId: number, id: number, data: ProductRequest): Promise<Product> {\n    const response = await this.api.put<Product>(`/websites/${websiteId}/products/${id}`, data);\n    return response.data;\n  }\n\n  async deleteProduct(websiteId: number, id: number): Promise<ApiResponse> {\n    const response = await this.api.delete<ApiResponse>(`/websites/${websiteId}/products/${id}`);\n    return response.data;\n  }\n\n  // Media APIs\n  async uploadMedia(websiteId: number, file: File): Promise<Media> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await this.api.post<Media>(`/websites/${websiteId}/media`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  async getWebsiteMedia(websiteId: number): Promise<Media[]> {\n    const response = await this.api.get<Media[]>(`/websites/${websiteId}/media`);\n    return response.data;\n  }\n\n  async deleteMedia(id: number): Promise<ApiResponse> {\n    const response = await this.api.delete<ApiResponse>(`/media/${id}`);\n    return response.data;\n  }\n}\n\nexport const apiClient = new ApiClient();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ronak/OneDrive/Documents/ezweb/frontend/app/admin/dashboard/components/new/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, FormEvent, ChangeEvent } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { apiClient } from '@/lib/api-client';\n\nexport default function NewComponentPage() {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    category: 'hero',\n    version: '1.0.0',\n    active: true,\n  });\n\n  const [componentFile, setComponentFile] = useState<File | null>(null);\n  const [schemaJson, setSchemaJson] = useState('');\n\n  const categories = [\n    'hero',\n    'product',\n    'contact',\n    'about',\n    'footer',\n    'header',\n    'gallery',\n    'testimonial',\n    'pricing',\n    'faq',\n  ];\n\n  const defaultSchema = {\n    title: {\n      type: 'text',\n      default: 'Default Title',\n      editable: true,\n      label: 'Title',\n      required: true,\n    },\n    subtitle: {\n      type: 'text',\n      default: 'Default Subtitle',\n      editable: true,\n      label: 'Subtitle',\n      required: false,\n    },\n    backgroundColor: {\n      type: 'color',\n      default: '#ffffff',\n      editable: true,\n      label: 'Background Color',\n      required: false,\n    },\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (!file.name.endsWith('.jsx') && !file.name.endsWith('.js')) {\n        setError('Please upload a .jsx or .js file');\n        return;\n      }\n      setComponentFile(file);\n      setError('');\n    }\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (!componentFile) {\n      setError('Please upload a component file');\n      return;\n    }\n\n    let schema;\n    try {\n      schema = schemaJson ? JSON.parse(schemaJson) : defaultSchema;\n    } catch (err) {\n      setError('Invalid JSON schema');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      // Step 1: Upload component file to S3\n      const formDataForUpload = new FormData();\n      formDataForUpload.append('file', componentFile);\n      formDataForUpload.append('folder', 'components');\n\n      const uploadResponse = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/media/upload`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        },\n        body: formDataForUpload,\n      });\n\n      if (!uploadResponse.ok) {\n        throw new Error('Failed to upload component file');\n      }\n\n      const uploadData = await uploadResponse.json();\n      const s3FileUrl = uploadData.s3Url || uploadData.url;\n\n      // Step 2: Create component registry entry\n      const componentData = {\n        name: formData.name,\n        description: formData.description || null,\n        s3FileUrl,\n        schema: JSON.stringify(schema),\n        category: formData.category,\n        version: formData.version,\n        active: formData.active,\n      };\n\n      await apiClient.createComponent(componentData);\n\n      router.push('/admin/dashboard/components');\n    } catch (err: any) {\n      console.error('Error creating component:', err);\n      setError(err.message || 'Failed to create component');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Upload Component</h1>\n        <p className=\"mt-2 text-gray-600\">Add a new component to the registry</p>\n      </div>\n\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n              {error}\n            </div>\n          )}\n\n          {/* Component Name */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Component Name <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              required\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Hero Section\"\n            />\n          </div>\n\n          {/* Description */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Description\n            </label>\n            <textarea\n              value={formData.description}\n              onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"A customizable hero section with title, subtitle, and CTA button\"\n            />\n          </div>\n\n          {/* Category */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Category <span className=\"text-red-500\">*</span>\n            </label>\n            <select\n              required\n              value={formData.category}\n              onChange={(e) => setFormData({ ...formData, category: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {categories.map((cat) => (\n                <option key={cat} value={cat}>\n                  {cat.charAt(0).toUpperCase() + cat.slice(1)}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Version */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Version <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              required\n              value={formData.version}\n              onChange={(e) => setFormData({ ...formData, version: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"1.0.0\"\n            />\n          </div>\n\n          {/* Component File Upload */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Component File (.jsx or .js) <span className=\"text-red-500\">*</span>\n            </label>\n            <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md hover:border-blue-500 transition-colors\">\n              <div className=\"space-y-1 text-center\">\n                <svg\n                  className=\"mx-auto h-12 w-12 text-gray-400\"\n                  stroke=\"currentColor\"\n                  fill=\"none\"\n                  viewBox=\"0 0 48 48\"\n                >\n                  <path\n                    d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n                <div className=\"flex text-sm text-gray-600\">\n                  <label className=\"relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500\">\n                    <span>Upload a file</span>\n                    <input\n                      type=\"file\"\n                      className=\"sr-only\"\n                      accept=\".jsx,.js\"\n                      onChange={handleFileChange}\n                      required\n                    />\n                  </label>\n                  <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-gray-500\">JSX or JS file</p>\n                {componentFile && (\n                  <p className=\"text-sm text-blue-600 font-medium\">{componentFile.name}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Schema JSON */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Schema JSON\n            </label>\n            <p className=\"text-xs text-gray-500 mb-2\">\n              Define customizable properties for this component. Leave empty to use default schema.\n            </p>\n            <textarea\n              value={schemaJson}\n              onChange={(e) => setSchemaJson(e.target.value)}\n              rows={12}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm\"\n              placeholder={JSON.stringify(defaultSchema, null, 2)}\n            />\n            <button\n              type=\"button\"\n              onClick={() => setSchemaJson(JSON.stringify(defaultSchema, null, 2))}\n              className=\"mt-2 text-sm text-blue-600 hover:text-blue-800\"\n            >\n              Load default schema template\n            </button>\n          </div>\n\n          {/* Active Status */}\n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"active\"\n              checked={formData.active}\n              onChange={(e) => setFormData({ ...formData, active: e.target.checked })}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"active\" className=\"ml-2 block text-sm text-gray-900\">\n              Make component active immediately\n            </label>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-end space-x-3 pt-6 border-t\">\n            <button\n              type=\"button\"\n              onClick={() => router.back()}\n              className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n              disabled={loading}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? 'Uploading...' : 'Upload Component'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}